R.version.string
R.version.string
R.version.string
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
sqrt(abs(z)-1)
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/mysqrt
my_div <- z/my_sqrt
my_div
c(1:4) + c(0,10)
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
?getwd
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags(,19:23)
flag_shapes <- flags[,19:23[]
flag_shapes <- flags[,19:23]
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat<- sapply(flag_shapes,range)
shape_mat
sclass(hape_mat)
class(hape_mat)
class(shape_mat)
unique(c(3,4,5,5,6))
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,inique)
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,length)
info()
sapply(flags,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
library(datasets)
datq(iris)
data(iris)
?iris
iris
head(iris)
split(iris, c("versicolor","virginica","sentosa"))
tapply(iris, c("versicolor","virginica","sentosa"),mean)
iris$species="virginica"
iris
head(iris)
library(datasets)
head(iris)
data(iris)
head(iris)
iris[iris$species="virginica"]
iris[iris$species="virginica",]
iris[iris$species="virginica",]
iris[,iris$species="virginica"]
iris[,]
iris[,species="a"]
iris[,"species"="a"]
iris[iris[1]=5.9,]
iris[iris[1]>5.9,]
iris[,iris$species=="virginica"]
iris[iris$species=="virginica",]
iris[iris[1]==5.9,]
iris[iris[5]=="virginica",]
iris[iris[5"Species"]=="virginica",]
iris[iris["Species"]=="virginica",]
iris[iris$Species=="virginica",]
lapply(iris[iris$Species=="virginica",], mean)
lapply(iris[iris$Species=="virginica",], mean,rm.na="TRUE")
sapply(iris[iris$Species=="virginica",], mean,rm.na="TRUE")
sapply(iris[iris$Species=="virginica",1:4], mean,rm.na="TRUE")
rowMeans(iris[, 1:4])
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
mtcars
head(mtcars)
sapply(mtcars, cyl, mean)
sapply(mtcars, mtcars$cyl, mean)
sapply(mtcars, cyl(1:8), mean)
sapply(mtcars, c(1:8), mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(iris$species, iris$sepal.length)
split(iris$species, iris$sepal.length))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
debug(ls)
ls
ls(iris)
exit()
a <- 2
a
data(mtcars)
mtcars
head(mtcars)
apply(mtcars,mtcars$mpg, mtcars$cyl, mean)
split(mtcars,mtcars$mpg, mtcars$cyl, mean)
split(mtcars,mtcars$cyl, mtcars$mpg, mean)
apply(split(mtcars,mtcars$cyl, mtcars$mpg), mean)
apply(split(mtcars$cyl, mtcars$mpg), mean)
split(mtcars$cyl, mtcars$mpg)
apply(split(mtcars$cyl, mtcars$mpg), mean)
split(mtcars,mtcars$mpg, mtcars$cyl, mean)
split(mtcars,mtcars$mpg, mtcars$cyl, mean)
apply(split(mtcars,mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
split(mtcars$mpg, c(4,8))
sapply(split(mtcars$mpg, c(4,8)), avg)
sapply(split(mtcars$mpg, c(4,8)), mean)
lapply(split(mtcars$mpg, c(4,8)), mean)
avgmpg <- lapply(split(mtcars$mpg, c(4,8)), mean)
avgmpg
avgmpg
avgmpg <- lapply(split(mtcars$mpg, c(4,8)), abs(mean)
avgmpg <- lapply(split(mtcars$mpg, c(4,8)), abs(mean))
avgmpg <- lapply(split(mtcars$mpg, c(4,8)), mean)
avgmpg
avgmpg[1]
abs(avgmpg[)1]
abs(avgmpg[)1])
abs(avgmpg[1])
avgmpg[1])
avgmpg[1]
abs(avgmpg[1])
abs(as.numeric(avgmpg[1])
avgmpg <- sapply(split(mtcars$mpg, c(4,8)), mean)
avgmpg <- lapply(split(mtcars$mpg, c(4,8)), mean)
avgmpg <- lapply(split(mtcars$mpg, c(4,8)), mean)
avgmpg
avgmpg <- sapply(split(mtcars$mpg, c(4,8)), mean)
avgmpg
class(avgmpg)
avgmpg[1]
abs(avgmpg[1])
abs(1.1)
abs(1)
avgmpg[1]-avgmpg[2]
avghp <- sapply(split(mtcars$hp, c(4,8)), mean)
avghp
avghp[1]-avghp[2]
avghp
tapply(mtcars$mpg, mtcars$cyl, mean)
lapply(iris[iris$Species=="virginica",], mean,rm.na="TRUE")
lapply(iris[iris$Species=="virginica",], mean)
sapply(iris[iris$Species=="virginica",1:4], mean,rm.na="TRUE")
sapply(iris[iris$Species=="virginica",1:4], mean,rm.na="TRUE")
apply(iris, 1, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
colMeans(iris)
tapply(mtcars$mpg, mtcars$cyl, mean)
apply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$hp, mtcars$cyl, mean)
split(mtcars$hp, mtcars$cyl)
class(tapply(mtcars$hp, mtcars$cyl, mean))
tapply(mtcars$hp, mtcars$cyl, mean)
ahp <- tapply(mtcars$hp, mtcars$cyl, mean)
ahp
ahp[1]
ahp[1,1]
ahp[1]-ahp[2]
ahp[1]-ahp[3]
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
pply(iris, 2, mean)
apply(iris, 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
lapply(iris[iris$Species=="virginica",], mean)
lapply(iris[iris$Species=="virginica",], mean, rm,na="TRUE")
lapply(iris[iris$Species=="virginica",], mean, na.rm="TRUE")
lapply(iris[iris$Species=="virginica",1:4], mean, na.rm="TRUE")
apply(ris$Species, ris$sipal.length, mean)
apply(iris$Species, iris$sipal.length, mean)
head(iris)
apply(iris$Species, iris$Sepal.Length, mean)
split(iris$Species, iris$Sepal.Length)
tapply(split(iris$Species, iris$Sepal.Length, ),mean)
tapply(split(iris$Species, iris$Sepal.Length, ),mean)
tapply(iris$Sepal.Length, iris$Species, mean)
swirl()
library(swirl)
ls()
list = ls()
ls()
rm(list = ls())
ls()
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd(dir = testdir)
setwd(dir = "testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
swirl()
file.info(mytest.R)
file.info
file.info("mytest.R"")
file.info("mytest.R")
file.info("mytest.R")
file.rename(from = mytest.R, mytest2.R)
file.rename(from = "mytest.R",to= "mytest2.R")
file.copy(from = "mytest2.R", to="mytest3.R")
dir()
file.path("mytest3.R")
m
file.path()
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", "testdir3", recursive = TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
unlink(c("testdir2","testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
getwd()
setwd("R")
setwd(""/Users/ganesh/R)
setwd("/Users/ganesh/R")
setwd("~/")
getwd()
setwd("~/Documents/R")
getwd()
setwd("~/")
getwd()
getwd(old.dir)
old.dir
setwd(old.dir)
dir.delete("testdir")
dir.delete
wwe
getwd()
unlink("testdir", recursive = TRUE)
c(1:20)
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1,20)
seq(0,10, by=0.5)
seq(5, 10, length= 30)
my_seq <- seq(5, 10, length= 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
swift()
library(package = "swift")
library(package = "swift()")
library(swift)
swirl()
install.packages("swirl")
library(swirl)
swirl()
main()
package("cachematrix.R")
setwd("~/Documents/R")
package("cachematrix.R")
package("cachematrix.R")
setwd("~/Documents/R/ProgrammingAssignment2")
package("cachematrix.R")
getwd()
package("cachematrix.R")
package("cachematrix.R")
package("cachematrix.R")
package("cachematrix.R")
package("cachematrix.R")
getwd()
getwd()
dir
dir()
package("cachematrix.R")
